# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

##set flag variables to indicate if the folder is changed.

variables:
  f1Flag: false
  f2Flag: false
  f3Flag: false

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      ## get the changed files
            $files=$(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion))
            $temp=$files -split ' '
            $count=$temp.Length
            echo "Total changed $count files"

            ## create a temp folder to hold the changed files
            New-Item -ItemType directory -Path $(system.defaultworkingdirectory)\temp
           
            For ($i=0; $i -lt $temp.Length; $i++)
            {
              $name=$temp[$i]
              echo "this is $name file"
              if ($name -like 'folder1/*')  #if f1 is a subfolder under a folder use "- like '*/f1/*'"
              { 
                ##achive folder f1 if it is changed.
                ##Compress-Archive -Path $(system.defaultworkingdirectory)/f1 -DestinationPath $(Build.ArtifactStagingDirectory)/f1.zip
                
                ##set the flag variable f1Flag to true
                New-Item -ItemType directory -Path $(system.defaultworkingdirectory)\temp\folder1
                Copy-Item -Path $name -Destination $(system.defaultworkingdirectory)\temp\folder1
                Write-Host "##vso[task.setvariable variable=f1Flag]True"
              }
              if ($name -like 'f2/*')
              {
                ##achive folder f2 if it is changed.
                ##Compress-Archive -Path $(system.defaultworkingdirectory)/f2 -DestinationPath $(Build.ArtifactStagingDirectory)/f2.zip
                ##set the flag variable f2Flag to true
                Write-Host "##vso[task.setvariable variable=f2Flag]True"
              }
            }
            ## create a temp folder to hold the changed files
            ## New-Item -ItemType directory -Path $(system.defaultworkingdirectory)\temp
      
            ##foreach($file in $temp){
            ##  if(Test-Path -path $file){
            ##  Copy-Item -Path $file -Destination $(system.defaultworkingdirectory)\temp
            ##  }
            ## }
            ## zip the temp folder which only have the changed files
            Compress-Archive -Path $(system.defaultworkingdirectory)\temp\* -DestinationPath $(Build.ArtifactStagingDirectory)\changedfiles.zip
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  ## condition: and(succeeded(), or(eq(variables.f1Flag, true), eq(variables.f2Flag, true), eq(variables.f3Flag, true)))